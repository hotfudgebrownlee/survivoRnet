vertex.size=V(net)$count/10,
layout=layout_components(net))
plot(net,
edge.arrow.size=0.01,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$count,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.75, TRUE ~ as.double(count)))
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0.01,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$count,
layout=layout_components(net))
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$count,
layout=layout_components(net))
plot(net,
arrow.mode=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$count,
layout=layout_components(net))
plot(net,
arrow.mode=2,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$count,
layout=layout_components(net))
plot(net,
arrow.mode=4,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$count,
layout=layout_components(net))
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$count,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0, TRUE ~ count))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0, TRUE ~ as.double(count)))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0, TRUE ~ as.double(count)),
logCount = log(count))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
logCount = log(count))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
logCount = log(count+1))
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$logCount,
layout=layout_components(net))
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$logCount/10,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
logCount = log(count+1)/10)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$logCount,
layout=layout_components(net))
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$logCount,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
logCount = log(count+1)/5)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$logCount,
layout=layout_components(net))
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$logCount,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
logCount = log(count+1)/2)
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$logCount,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
logCount = log(count+1))
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$logCount,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
logCount = log(count+1)*2)
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
logCount = log(count+1)*2)
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
scaled = log(count+1)/2)
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
scaled = log(count+1)/1.2)
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
scaled = log(count+1)*0.75)
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
scaled = log(count+1)*0.8)
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
scaled = log(count+1)*0.9)
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
scaled = log(count+1))
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_components(net))
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
scaled = log(count+1)*2)
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_components(net))
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_with_fr(net))
l <- layout_with_fr(net, weights=V(net)$scaled)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_with_kk(net))
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_with_fr(net))
nSize <- selfCompare %>% select(inspo_id, inspo_name) %>%
group_by(inspo_id) %>% mutate(count = n()) %>%
select(inspo_id, count) %>% unique() %>% filter(count > 1)
nodes <- selfCompare %>%
pivot_longer(everything(), names_to= c("type", "name"), names_sep="_") %>%
mutate(type = 1:(nrow(selfCompare)*4), type = case_when(
type %% 2 == 0 ~ type / 2,
TRUE ~ as.double(NA))) %>% fill(type, .direction="up") %>%
pivot_wider(id_cols="type", names_from="name", values_from="value") %>%
select(-c(type)) %>% unique() %>%
left_join(nSize, by=c("id"="inspo_id")) %>%
mutate(count = case_when(is.na(count) ~ 0.5, TRUE ~ as.double(count)),
scaled = log(count+1)*2)
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
layout=layout_with_fr(net))
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
# vertex.size=V(net)$scaled,
vertex.size=1,
layout=layout_with_fr(net))
net <- graph_from_data_frame(
d = edges, vertices = nodes, directed = T
)
net <- igraph::simplify(
net, remove.multiple=F, remove.loops=T
)
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
# vertex.size=V(net)$scaled,
vertex.size=3,
layout=layout_with_fr(net))
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
# vertex.size=V(net)$scaled,
vertex.size=3,
layout=layout_in_circle(net))
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
# vertex.size=V(net)$scaled,
vertex.size=3,
layout=layout_on_grid(net))
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
# vertex.size=3,
layout=layout_on_grid(net))
plot(net,
edge.arrow.size=0,
edge.size=0.01,
vertex.label=NA,
vertex.size=V(net)$scaled,
# vertex.size=3,
layout=layout_on_sphere(net))
